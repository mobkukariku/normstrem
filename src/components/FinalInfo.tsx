import { FC, useState } from "react";
import { motion } from "framer-motion";
import { useNavigate } from "react-router-dom";
import { createQuestion } from "../api/QuestionInstance.tsx";

export const FinalInfo: FC = () => {
    const [isFocused, setIsFocused] = useState(false);
    const [inputName, setInputName] = useState("");
    const [isLoading, setIsLoading] = useState(false);
    const navigate = useNavigate();

    const handleSubmit = async () => {
        if (!inputName.trim()) return;

        const userId = localStorage.getItem("userId")?.replace(/^"|"$/g, "");

        if (!userId) {
            alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢");
            return;
        }

        try {
            setIsLoading(true);
            await createQuestion(userId, inputName.trim());

            setInputName("");
            navigate("/question");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞:", error);
            alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className="flex flex-col items-center h-screen justify-center px-4 py-8">
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="max-w-xl w-full bg-[#1e1e1e] rounded-2xl p-8 shadow-lg border border-[#2e2e2e]"
            >
                <h1 className="text-3xl md:text-4xl font-bold text-[#3fe593] text-center">
                    –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≥–æ–ª–æ—Å! ü•≥
                </h1>
                <p className="mt-4 text-lg text-white text-center opacity-80">
                    –ù–∞–º –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ, –≤—ã ‚Äî —Ç–æ–ø!
                </p>
                <p className="mt-2 text-md text-white text-center opacity-70">
                    –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å? –í–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ:
                </p>

                <motion.input
                    type="text"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å"
                    className="w-full bg-[#2a2a2a] mt-6 text-white rounded-xl py-3 px-5 outline-none border transition-all duration-300 placeholder:text-[#aaaaaa] text-base"
                    style={{ borderColor: isFocused ? "#3fe593" : "#2a2a2a" }}
                    animate={{ borderWidth: isFocused ? 2 : 1 }}
                    onFocus={() => setIsFocused(true)}
                    onBlur={() => setIsFocused(false)}
                    value={inputName}
                    onChange={(e) => setInputName(e.target.value)}
                />

                <motion.button
                    whileHover={{ scale: inputName.trim() ? 1.03 : 1 }}
                    whileTap={{ scale: inputName.trim() ? 0.98 : 1 }}
                    disabled={!inputName.trim() || isLoading}
                    onClick={handleSubmit}
                    className={`w-full mt-6 py-3 px-6 rounded-xl text-white text-lg font-semibold transition-all duration-200 ${
                        inputName.trim()
                            ? "bg-[#3fe593] hover:bg-[#33d786] active:bg-[#2fc57a]"
                            : "bg-[#3fe593] opacity-50 cursor-not-allowed"
                    }`}
                >
                    {isLoading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å"}
                </motion.button>
            </motion.div>
        </div>
    );
};
